name: Pull Request
on: [ pull_request ]

env:
  DOTNET_VERSION: '6.0.402'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore
      
      - name: Publish
        run: dotnet publish Sprint-Service/Sprint-Service.csproj -c Release -o release --nologo
      
      - name: Persist workflow data as artifact
        uses: actions/upload-artifact@v3
        with:
          name: sprint-artifact
          path: /home/runner/work/Sprint-Service/Sprint-Service/release/
  
  analyse:
    name: Unit Tests
    needs: [ build ]
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Download workflow data
        uses: actions/download-artifact@v3
        with:
          name: sprint-artifact
          path: /home/runner/work/Sprint-Service/Sprint-Service/release/
      
      - name: Test
        run: dotnet test --no-restore --verbosity normal
      
  sonarcloud:
    name: SonarCloud
    runs-on: windows-latest
    
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - uses: actions/checkout@v2
        with:
          # Shallow clones should be disabled for a better relevancy of analysis
          fetch-depth: 0

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"MiraPlanner_Sprint-Service" /o:"miraplanner" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build Sprint-Service.sln
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"